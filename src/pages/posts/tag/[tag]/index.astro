---
import Footer from "@/components/footer/Footer.astro";
import Header from "@/components/header/Header.astro";
import Main from "@/components/posts/main/Main.astro";
import Layout from "@/layouts/Layout.astro";
import type Frontmatter from "@/types/Frontmatter";
import type Metadata from "@/types/Metadata";
import DefaultMetadata from "@/utils/DefaultMetadata";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const posts: CollectionEntry<"post">[] = await getCollection("post");

  const activePosts = posts.filter((post) => post.data.isActive);

  const tags: string[] = [];
  if (activePosts.length === 0) {
    return [];
  }

  activePosts.forEach((post) => {
    post.data.tags.forEach((tag: any) => {
      if (!tags.includes(tag)) {
        tags.push(tag);
      }
    });
  });

  return tags.map((tag) => ({
    params: {
      tag: tag,
    },
    props: {
      posts: activePosts
        .filter((post) => post.data.tags.includes(tag))
        .sort((a: any, b: any) => (a.data.date < b.data.date ? 1 : -1)),
      tag: tag,
    },
  }));
}

const { posts, tag }: { posts: CollectionEntry<"post">[]; tag: string } = Astro.props;

const frontmatters: Frontmatter[] = posts.map((post) => post.data);

const metaData: Metadata = {
  ...DefaultMetadata,
  title: `kanakanho's blog Posts tag ${tag}`,
  openGraph: {
    ...DefaultMetadata.openGraph,
    title: `kanakanho's blog Posts tag ${tag}`,
    url: `${DefaultMetadata.openGraph?.url}/posts/${tag}`,
  },
};
---

<Layout metadata={metaData}>
  <Header navigate="posts" />
  <Main frontmatters={frontmatters} tag={tag} />
  <Footer />
</Layout>
