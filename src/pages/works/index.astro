---
import Footer from "@/components/footer/Footer.astro";
import Header from "@/components/header/Header.astro";
import Works from "@/components/works/Works";
import Layout from "@/layouts/Layout.astro";
import type Frontmatter from "@/types/Frontmatter";
import DefaultMetadata from "@/utils/DefaultMetadata";
import type { MarkdownInstance } from "astro/dist/@types/astro";

const posts: MarkdownInstance<Frontmatter>[] = await Astro.glob<Frontmatter>("../../../posts/*.md");

const frontmatters: Frontmatter[] = posts
  .filter((post) => post.frontmatter.works?.worksDisplay)
  .sort((a, b) => {
    return new Date(a.frontmatter.date) < new Date(b.frontmatter.date) ? 1 : -1;
  })
  .map((post) => post.frontmatter);

const frontmattersWorksSmall: Frontmatter[] = posts
  .filter((post) => !post.frontmatter.works?.worksIsLarge)
  .sort((a, b) => {
    return new Date(a.frontmatter.date) < new Date(b.frontmatter.date) ? 1 : -1;
  })
  .map((post) => post.frontmatter);

const frontmattersWorksLarge: Frontmatter[] = posts
  .filter((post) => post.frontmatter.works?.worksIsLarge)
  .sort((a, b) => {
    return new Date(a.frontmatter.date) < new Date(b.frontmatter.date) ? 1 : -1;
  })
  .map((post) => post.frontmatter);
---

<Layout metadata={DefaultMetadata}>
  <Header navigate="works" />
  <Works frontmatters={frontmatters} />
  <Footer />
</Layout>
